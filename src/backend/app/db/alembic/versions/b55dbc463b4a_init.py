"""init

Revision ID: b55dbc463b4a
Revises: 
Create Date: 2025-04-18 23:53:47.245166

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b55dbc463b4a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('advanced_settings',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('read_hetatm', sa.Boolean(), nullable=False),
    sa.Column('ignore_water', sa.Boolean(), nullable=False),
    sa.Column('permissive_types', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('read_hetatm', 'ignore_water', 'permissive_types')
    )
    op.create_table('calculation_configs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('method', sa.VARCHAR(length=20), nullable=False),
    sa.Column('parameters', sa.VARCHAR(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('method', 'parameters')
    )
    op.create_table('molecule_set_stats',
    sa.Column('file_hash', sa.VARCHAR(length=100), nullable=False),
    sa.Column('total_molecules', sa.Integer(), nullable=False),
    sa.Column('total_atoms', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('file_hash')
    )
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('openid', sa.VARCHAR(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('atom_type_counts',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=10), nullable=False),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('molecule_set_id', sa.VARCHAR(length=100), nullable=False),
    sa.ForeignKeyConstraint(['molecule_set_id'], ['molecule_set_stats.file_hash'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('calculation_sets',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('advanced_settings_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['advanced_settings_id'], ['advanced_settings.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('calculations',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('file_name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('file_hash', sa.VARCHAR(length=100), nullable=False),
    sa.Column('charges', sa.JSON(), nullable=False),
    sa.Column('config_id', sa.Uuid(), nullable=False),
    sa.Column('advanced_settings_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['advanced_settings_id'], ['advanced_settings.id'], ),
    sa.ForeignKeyConstraint(['config_id'], ['calculation_configs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('calculation_set_configs',
    sa.Column('calculation_set_id', sa.Uuid(), nullable=False),
    sa.Column('config_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['calculation_set_id'], ['calculation_sets.id'], ),
    sa.ForeignKeyConstraint(['config_id'], ['calculation_configs.id'], ),
    sa.PrimaryKeyConstraint('calculation_set_id', 'config_id'),
    sa.UniqueConstraint('calculation_set_id', 'config_id')
    )
    op.create_table('calculation_set_stats',
    sa.Column('calculation_set_id', sa.Uuid(), nullable=False),
    sa.Column('molecule_set_id', sa.VARCHAR(length=100), nullable=False),
    sa.ForeignKeyConstraint(['calculation_set_id'], ['calculation_sets.id'], ),
    sa.ForeignKeyConstraint(['molecule_set_id'], ['molecule_set_stats.file_hash'], ),
    sa.PrimaryKeyConstraint('calculation_set_id', 'molecule_set_id'),
    sa.UniqueConstraint('calculation_set_id', 'molecule_set_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('calculation_set_stats')
    op.drop_table('calculation_set_configs')
    op.drop_table('calculations')
    op.drop_table('calculation_sets')
    op.drop_table('atom_type_counts')
    op.drop_table('users')
    op.drop_table('molecule_set_stats')
    op.drop_table('calculation_configs')
    op.drop_table('advanced_settings')
    # ### end Alembic commands ###
